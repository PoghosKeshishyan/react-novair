try {
        // BANKI KTOR



        // ===========================================================================

        const selectedFlights = JSON.parse(sessionStorage.getItem('selectedFlights'));
        const bookingPostData = JSON.parse(sessionStorage.getItem('bookingPostData'));

        const postData = passangerList.map((elem, index) => {
          if (elem.passenger_type !== 'baby' && !elem.departure_seat_id) {
            elem.departure_seat_id = selectedFlights.flight.flight_seats[index].id;
          }

          if (bookingPostData.return_date && elem.passenger_type !== 'baby' && !elem.return_seat_id) {
            elem.return_seat_id = selectedFlights.return.flight_seats[index].id;
          }

          return elem;
        });

        /* ============================= for flight tickets ============================= */
        try {
          postData.forEach(async elem => {

            // gnum enq ticket@
            let currentTicket = selectedFlights.flight.tickets.find(item => item.id === elem.ticket_id);
            console.log('departure currentTicket', currentTicket);
            console.log('deparuter elem', elem);


            let www = await axios.post(`tickets/${currentTicket.id}/set_sold/`);
            console.log('Ticket@ sold enq sarqum', www);


            // broni enq anum nstatex@
            if (elem.passenger_type !== 'baby') {
              let a = await axios.post(`flights_seats/${elem.departure_seat_id}/set_taken/`);
              console.log('Nstatexn enq broni anum', a);
            }

            // pasajiri tvyalner@ post em anum
            let c = await axios.post(`passangers/`, elem);
            console.log('passanget Listn enq save anum', c);

            console.log(elem);

            console.log('----------------------------------------');

          })

        } catch (error) {
          console.log(error);
        }

        console.log('======================================================== return');


        /* ============================= for return tickets ============================= */
        if (bookingPostData.return_date) {
          try {
            postData.forEach(async elem => {
              elem.ticket_id = elem.return_ticket_id;

              // gnum enq ticket@
              let currentTicket = selectedFlights.return.tickets.find(item => item.id === elem.return_ticket_id);
              let www = await axios.post(`tickets/${currentTicket.id}/set_sold/`);
              console.log('Ticket@ sold enq sarqum', www);

              // broni enq anum nstatex@
              if (elem.passenger_type !== 'baby') {
                let a = await axios.post(`flights_seats/${elem.return_seat_id}/set_taken/`);
                console.log('Nstatexn enq broni anum', a);
              }


              // pasajiri tvyalner@ post em anum
              let c = await axios.post(`passangers/`, elem);
              console.log('passanget Listn enq save anum', c);

              console.log('return ticket', currentTicket);
              console.log('return elem', elem);

              console.log('----------------------------------------');

            })

          } catch (error) {
            console.log(error);
          }
        }

        // alert('ԳՆՈՒՄԸ ԿԱՏԱՐՎԵՑ');

        const responseObj = {
          "am": "Գնումը հաջողությամբ կատարվեց։/Ստուգեք ձեր էլեկտրոնային փոստը։",
          "ru": "Покупка успешно завершена./Проверьте вашу электронную почту.",
          "en": "The purchase was successful./Please check your email."
        };

        localStorage.setItem('price_res', JSON.stringify({ ok: true, responseObj }));
        navigate('/');

      } catch (error) {

        const responseObj = {
          "am": "Տեղի ունեցավ սխալ։/Խնդրում ենք փորձել կրկին։",
          "ru": "Произошла ошибка./Пожалуйста, попробуйте снова.",
          "en": "An error occurred./Please try again."
        };

        localStorage.setItem('price_res', JSON.stringify({ ok: false, responseObj }));
        navigate('/');

        console.log(error);

      }